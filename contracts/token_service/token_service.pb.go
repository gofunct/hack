// Code generated by protoc-gen-go. DO NOT EDIT.
// source: token_service.proto

package token_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type TransactOpts struct {
	FromAddress          string   `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	PrivateKey           string   `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Nonce                int64    `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Value                int64    `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	GasPrice             int64    `protobuf:"varint,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit             int64    `protobuf:"varint,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactOpts) Reset()         { *m = TransactOpts{} }
func (m *TransactOpts) String() string { return proto.CompactTextString(m) }
func (*TransactOpts) ProtoMessage()    {}
func (*TransactOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{1}
}

func (m *TransactOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactOpts.Unmarshal(m, b)
}
func (m *TransactOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactOpts.Marshal(b, m, deterministic)
}
func (m *TransactOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactOpts.Merge(m, src)
}
func (m *TransactOpts) XXX_Size() int {
	return xxx_messageInfo_TransactOpts.Size(m)
}
func (m *TransactOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactOpts.DiscardUnknown(m)
}

var xxx_messageInfo_TransactOpts proto.InternalMessageInfo

func (m *TransactOpts) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *TransactOpts) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *TransactOpts) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactOpts) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TransactOpts) GetGasPrice() int64 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

func (m *TransactOpts) GetGasLimit() int64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

type TransactionReq struct {
	Opts                 *TransactOpts `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TransactionReq) Reset()         { *m = TransactionReq{} }
func (m *TransactionReq) String() string { return proto.CompactTextString(m) }
func (*TransactionReq) ProtoMessage()    {}
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{2}
}

func (m *TransactionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReq.Unmarshal(m, b)
}
func (m *TransactionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReq.Marshal(b, m, deterministic)
}
func (m *TransactionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReq.Merge(m, src)
}
func (m *TransactionReq) XXX_Size() int {
	return xxx_messageInfo_TransactionReq.Size(m)
}
func (m *TransactionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReq proto.InternalMessageInfo

func (m *TransactionReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type TransactionResp struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionResp) Reset()         { *m = TransactionResp{} }
func (m *TransactionResp) String() string { return proto.CompactTextString(m) }
func (*TransactionResp) ProtoMessage()    {}
func (*TransactionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{3}
}

func (m *TransactionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResp.Unmarshal(m, b)
}
func (m *TransactionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResp.Marshal(b, m, deterministic)
}
func (m *TransactionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResp.Merge(m, src)
}
func (m *TransactionResp) XXX_Size() int {
	return xxx_messageInfo_TransactionResp.Size(m)
}
func (m *TransactionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResp.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResp proto.InternalMessageInfo

func (m *TransactionResp) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type AllowanceReq struct {
	Arg                  string   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	Arg2                 string   `protobuf:"bytes,2,opt,name=arg2,proto3" json:"arg2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllowanceReq) Reset()         { *m = AllowanceReq{} }
func (m *AllowanceReq) String() string { return proto.CompactTextString(m) }
func (*AllowanceReq) ProtoMessage()    {}
func (*AllowanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{4}
}

func (m *AllowanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllowanceReq.Unmarshal(m, b)
}
func (m *AllowanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllowanceReq.Marshal(b, m, deterministic)
}
func (m *AllowanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllowanceReq.Merge(m, src)
}
func (m *AllowanceReq) XXX_Size() int {
	return xxx_messageInfo_AllowanceReq.Size(m)
}
func (m *AllowanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AllowanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_AllowanceReq proto.InternalMessageInfo

func (m *AllowanceReq) GetArg() string {
	if m != nil {
		return m.Arg
	}
	return ""
}

func (m *AllowanceReq) GetArg2() string {
	if m != nil {
		return m.Arg2
	}
	return ""
}

type AllowanceResp struct {
	Arg                  []byte   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllowanceResp) Reset()         { *m = AllowanceResp{} }
func (m *AllowanceResp) String() string { return proto.CompactTextString(m) }
func (*AllowanceResp) ProtoMessage()    {}
func (*AllowanceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{5}
}

func (m *AllowanceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllowanceResp.Unmarshal(m, b)
}
func (m *AllowanceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllowanceResp.Marshal(b, m, deterministic)
}
func (m *AllowanceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllowanceResp.Merge(m, src)
}
func (m *AllowanceResp) XXX_Size() int {
	return xxx_messageInfo_AllowanceResp.Size(m)
}
func (m *AllowanceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AllowanceResp.DiscardUnknown(m)
}

var xxx_messageInfo_AllowanceResp proto.InternalMessageInfo

func (m *AllowanceResp) GetArg() []byte {
	if m != nil {
		return m.Arg
	}
	return nil
}

type ApproveAndCallReq struct {
	Spender              string        `protobuf:"bytes,1,opt,name=spender,proto3" json:"spender,omitempty"`
	Value                []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ExtraData            [][]byte      `protobuf:"bytes,3,rep,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	Opts                 *TransactOpts `protobuf:"bytes,4,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ApproveAndCallReq) Reset()         { *m = ApproveAndCallReq{} }
func (m *ApproveAndCallReq) String() string { return proto.CompactTextString(m) }
func (*ApproveAndCallReq) ProtoMessage()    {}
func (*ApproveAndCallReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{6}
}

func (m *ApproveAndCallReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveAndCallReq.Unmarshal(m, b)
}
func (m *ApproveAndCallReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveAndCallReq.Marshal(b, m, deterministic)
}
func (m *ApproveAndCallReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveAndCallReq.Merge(m, src)
}
func (m *ApproveAndCallReq) XXX_Size() int {
	return xxx_messageInfo_ApproveAndCallReq.Size(m)
}
func (m *ApproveAndCallReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveAndCallReq.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveAndCallReq proto.InternalMessageInfo

func (m *ApproveAndCallReq) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

func (m *ApproveAndCallReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ApproveAndCallReq) GetExtraData() [][]byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

func (m *ApproveAndCallReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type ApproveAndCallResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApproveAndCallResp) Reset()         { *m = ApproveAndCallResp{} }
func (m *ApproveAndCallResp) String() string { return proto.CompactTextString(m) }
func (*ApproveAndCallResp) ProtoMessage()    {}
func (*ApproveAndCallResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{7}
}

func (m *ApproveAndCallResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveAndCallResp.Unmarshal(m, b)
}
func (m *ApproveAndCallResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveAndCallResp.Marshal(b, m, deterministic)
}
func (m *ApproveAndCallResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveAndCallResp.Merge(m, src)
}
func (m *ApproveAndCallResp) XXX_Size() int {
	return xxx_messageInfo_ApproveAndCallResp.Size(m)
}
func (m *ApproveAndCallResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveAndCallResp.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveAndCallResp proto.InternalMessageInfo

func (m *ApproveAndCallResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ApproveReq struct {
	Spender              string        `protobuf:"bytes,1,opt,name=spender,proto3" json:"spender,omitempty"`
	Value                []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Opts                 *TransactOpts `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ApproveReq) Reset()         { *m = ApproveReq{} }
func (m *ApproveReq) String() string { return proto.CompactTextString(m) }
func (*ApproveReq) ProtoMessage()    {}
func (*ApproveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{8}
}

func (m *ApproveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveReq.Unmarshal(m, b)
}
func (m *ApproveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveReq.Marshal(b, m, deterministic)
}
func (m *ApproveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveReq.Merge(m, src)
}
func (m *ApproveReq) XXX_Size() int {
	return xxx_messageInfo_ApproveReq.Size(m)
}
func (m *ApproveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveReq.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveReq proto.InternalMessageInfo

func (m *ApproveReq) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

func (m *ApproveReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ApproveReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type ApproveResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApproveResp) Reset()         { *m = ApproveResp{} }
func (m *ApproveResp) String() string { return proto.CompactTextString(m) }
func (*ApproveResp) ProtoMessage()    {}
func (*ApproveResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{9}
}

func (m *ApproveResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveResp.Unmarshal(m, b)
}
func (m *ApproveResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveResp.Marshal(b, m, deterministic)
}
func (m *ApproveResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveResp.Merge(m, src)
}
func (m *ApproveResp) XXX_Size() int {
	return xxx_messageInfo_ApproveResp.Size(m)
}
func (m *ApproveResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveResp.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveResp proto.InternalMessageInfo

func (m *ApproveResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type BalanceOfReq struct {
	Arg                  string   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceOfReq) Reset()         { *m = BalanceOfReq{} }
func (m *BalanceOfReq) String() string { return proto.CompactTextString(m) }
func (*BalanceOfReq) ProtoMessage()    {}
func (*BalanceOfReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{10}
}

func (m *BalanceOfReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceOfReq.Unmarshal(m, b)
}
func (m *BalanceOfReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceOfReq.Marshal(b, m, deterministic)
}
func (m *BalanceOfReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceOfReq.Merge(m, src)
}
func (m *BalanceOfReq) XXX_Size() int {
	return xxx_messageInfo_BalanceOfReq.Size(m)
}
func (m *BalanceOfReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceOfReq.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceOfReq proto.InternalMessageInfo

func (m *BalanceOfReq) GetArg() string {
	if m != nil {
		return m.Arg
	}
	return ""
}

type BalanceOfResp struct {
	Arg                  []byte   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceOfResp) Reset()         { *m = BalanceOfResp{} }
func (m *BalanceOfResp) String() string { return proto.CompactTextString(m) }
func (*BalanceOfResp) ProtoMessage()    {}
func (*BalanceOfResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{11}
}

func (m *BalanceOfResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceOfResp.Unmarshal(m, b)
}
func (m *BalanceOfResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceOfResp.Marshal(b, m, deterministic)
}
func (m *BalanceOfResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceOfResp.Merge(m, src)
}
func (m *BalanceOfResp) XXX_Size() int {
	return xxx_messageInfo_BalanceOfResp.Size(m)
}
func (m *BalanceOfResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceOfResp.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceOfResp proto.InternalMessageInfo

func (m *BalanceOfResp) GetArg() []byte {
	if m != nil {
		return m.Arg
	}
	return nil
}

type BurnFromReq struct {
	From                 string        `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Value                []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Opts                 *TransactOpts `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BurnFromReq) Reset()         { *m = BurnFromReq{} }
func (m *BurnFromReq) String() string { return proto.CompactTextString(m) }
func (*BurnFromReq) ProtoMessage()    {}
func (*BurnFromReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{12}
}

func (m *BurnFromReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurnFromReq.Unmarshal(m, b)
}
func (m *BurnFromReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurnFromReq.Marshal(b, m, deterministic)
}
func (m *BurnFromReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurnFromReq.Merge(m, src)
}
func (m *BurnFromReq) XXX_Size() int {
	return xxx_messageInfo_BurnFromReq.Size(m)
}
func (m *BurnFromReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BurnFromReq.DiscardUnknown(m)
}

var xxx_messageInfo_BurnFromReq proto.InternalMessageInfo

func (m *BurnFromReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *BurnFromReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BurnFromReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type BurnFromResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BurnFromResp) Reset()         { *m = BurnFromResp{} }
func (m *BurnFromResp) String() string { return proto.CompactTextString(m) }
func (*BurnFromResp) ProtoMessage()    {}
func (*BurnFromResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{13}
}

func (m *BurnFromResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurnFromResp.Unmarshal(m, b)
}
func (m *BurnFromResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurnFromResp.Marshal(b, m, deterministic)
}
func (m *BurnFromResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurnFromResp.Merge(m, src)
}
func (m *BurnFromResp) XXX_Size() int {
	return xxx_messageInfo_BurnFromResp.Size(m)
}
func (m *BurnFromResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BurnFromResp.DiscardUnknown(m)
}

var xxx_messageInfo_BurnFromResp proto.InternalMessageInfo

func (m *BurnFromResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type BurnReq struct {
	Value                []byte        `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Opts                 *TransactOpts `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BurnReq) Reset()         { *m = BurnReq{} }
func (m *BurnReq) String() string { return proto.CompactTextString(m) }
func (*BurnReq) ProtoMessage()    {}
func (*BurnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{14}
}

func (m *BurnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurnReq.Unmarshal(m, b)
}
func (m *BurnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurnReq.Marshal(b, m, deterministic)
}
func (m *BurnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurnReq.Merge(m, src)
}
func (m *BurnReq) XXX_Size() int {
	return xxx_messageInfo_BurnReq.Size(m)
}
func (m *BurnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BurnReq.DiscardUnknown(m)
}

var xxx_messageInfo_BurnReq proto.InternalMessageInfo

func (m *BurnReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BurnReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type BurnResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BurnResp) Reset()         { *m = BurnResp{} }
func (m *BurnResp) String() string { return proto.CompactTextString(m) }
func (*BurnResp) ProtoMessage()    {}
func (*BurnResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{15}
}

func (m *BurnResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurnResp.Unmarshal(m, b)
}
func (m *BurnResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurnResp.Marshal(b, m, deterministic)
}
func (m *BurnResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurnResp.Merge(m, src)
}
func (m *BurnResp) XXX_Size() int {
	return xxx_messageInfo_BurnResp.Size(m)
}
func (m *BurnResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BurnResp.DiscardUnknown(m)
}

var xxx_messageInfo_BurnResp proto.InternalMessageInfo

func (m *BurnResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type DecimalsResp struct {
	Arg                  []byte   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecimalsResp) Reset()         { *m = DecimalsResp{} }
func (m *DecimalsResp) String() string { return proto.CompactTextString(m) }
func (*DecimalsResp) ProtoMessage()    {}
func (*DecimalsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{16}
}

func (m *DecimalsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecimalsResp.Unmarshal(m, b)
}
func (m *DecimalsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecimalsResp.Marshal(b, m, deterministic)
}
func (m *DecimalsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecimalsResp.Merge(m, src)
}
func (m *DecimalsResp) XXX_Size() int {
	return xxx_messageInfo_DecimalsResp.Size(m)
}
func (m *DecimalsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DecimalsResp.DiscardUnknown(m)
}

var xxx_messageInfo_DecimalsResp proto.InternalMessageInfo

func (m *DecimalsResp) GetArg() []byte {
	if m != nil {
		return m.Arg
	}
	return nil
}

type NameResp struct {
	Arg                  string   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameResp) Reset()         { *m = NameResp{} }
func (m *NameResp) String() string { return proto.CompactTextString(m) }
func (*NameResp) ProtoMessage()    {}
func (*NameResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{17}
}

func (m *NameResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameResp.Unmarshal(m, b)
}
func (m *NameResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameResp.Marshal(b, m, deterministic)
}
func (m *NameResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameResp.Merge(m, src)
}
func (m *NameResp) XXX_Size() int {
	return xxx_messageInfo_NameResp.Size(m)
}
func (m *NameResp) XXX_DiscardUnknown() {
	xxx_messageInfo_NameResp.DiscardUnknown(m)
}

var xxx_messageInfo_NameResp proto.InternalMessageInfo

func (m *NameResp) GetArg() string {
	if m != nil {
		return m.Arg
	}
	return ""
}

type OnApprovalReq struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Spender              string   `protobuf:"bytes,2,opt,name=spender,proto3" json:"spender,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnApprovalReq) Reset()         { *m = OnApprovalReq{} }
func (m *OnApprovalReq) String() string { return proto.CompactTextString(m) }
func (*OnApprovalReq) ProtoMessage()    {}
func (*OnApprovalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{18}
}

func (m *OnApprovalReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnApprovalReq.Unmarshal(m, b)
}
func (m *OnApprovalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnApprovalReq.Marshal(b, m, deterministic)
}
func (m *OnApprovalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnApprovalReq.Merge(m, src)
}
func (m *OnApprovalReq) XXX_Size() int {
	return xxx_messageInfo_OnApprovalReq.Size(m)
}
func (m *OnApprovalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OnApprovalReq.DiscardUnknown(m)
}

var xxx_messageInfo_OnApprovalReq proto.InternalMessageInfo

func (m *OnApprovalReq) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *OnApprovalReq) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

func (m *OnApprovalReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type OnBurnReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnBurnReq) Reset()         { *m = OnBurnReq{} }
func (m *OnBurnReq) String() string { return proto.CompactTextString(m) }
func (*OnBurnReq) ProtoMessage()    {}
func (*OnBurnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{19}
}

func (m *OnBurnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnBurnReq.Unmarshal(m, b)
}
func (m *OnBurnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnBurnReq.Marshal(b, m, deterministic)
}
func (m *OnBurnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnBurnReq.Merge(m, src)
}
func (m *OnBurnReq) XXX_Size() int {
	return xxx_messageInfo_OnBurnReq.Size(m)
}
func (m *OnBurnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OnBurnReq.DiscardUnknown(m)
}

var xxx_messageInfo_OnBurnReq proto.InternalMessageInfo

func (m *OnBurnReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *OnBurnReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type OnTransferReq struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnTransferReq) Reset()         { *m = OnTransferReq{} }
func (m *OnTransferReq) String() string { return proto.CompactTextString(m) }
func (*OnTransferReq) ProtoMessage()    {}
func (*OnTransferReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{20}
}

func (m *OnTransferReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnTransferReq.Unmarshal(m, b)
}
func (m *OnTransferReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnTransferReq.Marshal(b, m, deterministic)
}
func (m *OnTransferReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnTransferReq.Merge(m, src)
}
func (m *OnTransferReq) XXX_Size() int {
	return xxx_messageInfo_OnTransferReq.Size(m)
}
func (m *OnTransferReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OnTransferReq.DiscardUnknown(m)
}

var xxx_messageInfo_OnTransferReq proto.InternalMessageInfo

func (m *OnTransferReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *OnTransferReq) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *OnTransferReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SymbolResp struct {
	Arg                  string   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SymbolResp) Reset()         { *m = SymbolResp{} }
func (m *SymbolResp) String() string { return proto.CompactTextString(m) }
func (*SymbolResp) ProtoMessage()    {}
func (*SymbolResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{21}
}

func (m *SymbolResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymbolResp.Unmarshal(m, b)
}
func (m *SymbolResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymbolResp.Marshal(b, m, deterministic)
}
func (m *SymbolResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymbolResp.Merge(m, src)
}
func (m *SymbolResp) XXX_Size() int {
	return xxx_messageInfo_SymbolResp.Size(m)
}
func (m *SymbolResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SymbolResp.DiscardUnknown(m)
}

var xxx_messageInfo_SymbolResp proto.InternalMessageInfo

func (m *SymbolResp) GetArg() string {
	if m != nil {
		return m.Arg
	}
	return ""
}

type TotalSupplyResp struct {
	Arg                  []byte   `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalSupplyResp) Reset()         { *m = TotalSupplyResp{} }
func (m *TotalSupplyResp) String() string { return proto.CompactTextString(m) }
func (*TotalSupplyResp) ProtoMessage()    {}
func (*TotalSupplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{22}
}

func (m *TotalSupplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalSupplyResp.Unmarshal(m, b)
}
func (m *TotalSupplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalSupplyResp.Marshal(b, m, deterministic)
}
func (m *TotalSupplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalSupplyResp.Merge(m, src)
}
func (m *TotalSupplyResp) XXX_Size() int {
	return xxx_messageInfo_TotalSupplyResp.Size(m)
}
func (m *TotalSupplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalSupplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_TotalSupplyResp proto.InternalMessageInfo

func (m *TotalSupplyResp) GetArg() []byte {
	if m != nil {
		return m.Arg
	}
	return nil
}

type TransferFromReq struct {
	From                 string        `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string        `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value                []byte        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Opts                 *TransactOpts `protobuf:"bytes,4,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TransferFromReq) Reset()         { *m = TransferFromReq{} }
func (m *TransferFromReq) String() string { return proto.CompactTextString(m) }
func (*TransferFromReq) ProtoMessage()    {}
func (*TransferFromReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{23}
}

func (m *TransferFromReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferFromReq.Unmarshal(m, b)
}
func (m *TransferFromReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferFromReq.Marshal(b, m, deterministic)
}
func (m *TransferFromReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferFromReq.Merge(m, src)
}
func (m *TransferFromReq) XXX_Size() int {
	return xxx_messageInfo_TransferFromReq.Size(m)
}
func (m *TransferFromReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferFromReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferFromReq proto.InternalMessageInfo

func (m *TransferFromReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *TransferFromReq) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferFromReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TransferFromReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type TransferFromResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferFromResp) Reset()         { *m = TransferFromResp{} }
func (m *TransferFromResp) String() string { return proto.CompactTextString(m) }
func (*TransferFromResp) ProtoMessage()    {}
func (*TransferFromResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{24}
}

func (m *TransferFromResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferFromResp.Unmarshal(m, b)
}
func (m *TransferFromResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferFromResp.Marshal(b, m, deterministic)
}
func (m *TransferFromResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferFromResp.Merge(m, src)
}
func (m *TransferFromResp) XXX_Size() int {
	return xxx_messageInfo_TransferFromResp.Size(m)
}
func (m *TransferFromResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferFromResp.DiscardUnknown(m)
}

var xxx_messageInfo_TransferFromResp proto.InternalMessageInfo

func (m *TransferFromResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type TransferReq struct {
	To                   string        `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Value                []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Opts                 *TransactOpts `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TransferReq) Reset()         { *m = TransferReq{} }
func (m *TransferReq) String() string { return proto.CompactTextString(m) }
func (*TransferReq) ProtoMessage()    {}
func (*TransferReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{25}
}

func (m *TransferReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferReq.Unmarshal(m, b)
}
func (m *TransferReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferReq.Marshal(b, m, deterministic)
}
func (m *TransferReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferReq.Merge(m, src)
}
func (m *TransferReq) XXX_Size() int {
	return xxx_messageInfo_TransferReq.Size(m)
}
func (m *TransferReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferReq proto.InternalMessageInfo

func (m *TransferReq) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TransferReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TransferReq) GetOpts() *TransactOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type TransferResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferResp) Reset()         { *m = TransferResp{} }
func (m *TransferResp) String() string { return proto.CompactTextString(m) }
func (*TransferResp) ProtoMessage()    {}
func (*TransferResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{26}
}

func (m *TransferResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResp.Unmarshal(m, b)
}
func (m *TransferResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResp.Marshal(b, m, deterministic)
}
func (m *TransferResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResp.Merge(m, src)
}
func (m *TransferResp) XXX_Size() int {
	return xxx_messageInfo_TransferResp.Size(m)
}
func (m *TransferResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResp.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResp proto.InternalMessageInfo

func (m *TransferResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Empty)(nil), "token_service.Empty")
	proto.RegisterType((*TransactOpts)(nil), "token_service.TransactOpts")
	proto.RegisterType((*TransactionReq)(nil), "token_service.TransactionReq")
	proto.RegisterType((*TransactionResp)(nil), "token_service.TransactionResp")
	proto.RegisterType((*AllowanceReq)(nil), "token_service.AllowanceReq")
	proto.RegisterType((*AllowanceResp)(nil), "token_service.AllowanceResp")
	proto.RegisterType((*ApproveAndCallReq)(nil), "token_service.ApproveAndCallReq")
	proto.RegisterType((*ApproveAndCallResp)(nil), "token_service.ApproveAndCallResp")
	proto.RegisterType((*ApproveReq)(nil), "token_service.ApproveReq")
	proto.RegisterType((*ApproveResp)(nil), "token_service.ApproveResp")
	proto.RegisterType((*BalanceOfReq)(nil), "token_service.BalanceOfReq")
	proto.RegisterType((*BalanceOfResp)(nil), "token_service.BalanceOfResp")
	proto.RegisterType((*BurnFromReq)(nil), "token_service.BurnFromReq")
	proto.RegisterType((*BurnFromResp)(nil), "token_service.BurnFromResp")
	proto.RegisterType((*BurnReq)(nil), "token_service.BurnReq")
	proto.RegisterType((*BurnResp)(nil), "token_service.BurnResp")
	proto.RegisterType((*DecimalsResp)(nil), "token_service.DecimalsResp")
	proto.RegisterType((*NameResp)(nil), "token_service.NameResp")
	proto.RegisterType((*OnApprovalReq)(nil), "token_service.OnApprovalReq")
	proto.RegisterType((*OnBurnReq)(nil), "token_service.OnBurnReq")
	proto.RegisterType((*OnTransferReq)(nil), "token_service.OnTransferReq")
	proto.RegisterType((*SymbolResp)(nil), "token_service.SymbolResp")
	proto.RegisterType((*TotalSupplyResp)(nil), "token_service.TotalSupplyResp")
	proto.RegisterType((*TransferFromReq)(nil), "token_service.TransferFromReq")
	proto.RegisterType((*TransferFromResp)(nil), "token_service.TransferFromResp")
	proto.RegisterType((*TransferReq)(nil), "token_service.TransferReq")
	proto.RegisterType((*TransferResp)(nil), "token_service.TransferResp")
}

func init() { proto.RegisterFile("token_service.proto", fileDescriptor_84c67560d86c10bb) }

var fileDescriptor_84c67560d86c10bb = []byte{
	// 802 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xcd, 0xfd, 0x32, 0x71, 0x2f, 0x2c, 0x15, 0x35, 0x69, 0x29, 0xe9, 0x82, 0x44, 0x84, 0x50,
	0x91, 0x0a, 0x88, 0x07, 0x1e, 0x20, 0xa5, 0xad, 0x8a, 0x40, 0xa4, 0x4a, 0xc3, 0x73, 0xb4, 0x71,
	0x36, 0x17, 0xd5, 0x37, 0x76, 0x37, 0x69, 0x23, 0xf1, 0x17, 0xfc, 0x0c, 0x7f, 0xc3, 0xaf, 0xa0,
	0xb5, 0xd7, 0x89, 0xe3, 0xc4, 0xc1, 0x5c, 0xde, 0x3c, 0xb3, 0xb3, 0x33, 0x67, 0xce, 0xce, 0x9c,
	0x04, 0xee, 0x0a, 0xe7, 0x9a, 0xda, 0x1d, 0x4e, 0xd9, 0x64, 0x64, 0xd0, 0x23, 0x97, 0x39, 0xc2,
	0x41, 0x1b, 0x0b, 0x4e, 0x5c, 0x84, 0xfc, 0x99, 0xe5, 0x8a, 0x29, 0xfe, 0x91, 0x06, 0xad, 0xcd,
	0x88, 0xcd, 0x89, 0x21, 0x9a, 0xae, 0xe0, 0xe8, 0x10, 0xb4, 0x3e, 0x73, 0xac, 0x0e, 0xe9, 0xf5,
	0x18, 0xe5, 0x5c, 0x4f, 0xd7, 0xd2, 0xf5, 0x72, 0xab, 0x22, 0x7d, 0x0d, 0xdf, 0x85, 0x1e, 0x42,
	0xc5, 0x65, 0xa3, 0x09, 0x11, 0xb4, 0x73, 0x4d, 0xa7, 0x7a, 0xc6, 0x8b, 0x00, 0xe5, 0xfa, 0x48,
	0xa7, 0x68, 0x07, 0xf2, 0xb6, 0x63, 0x1b, 0x54, 0xcf, 0xd6, 0xd2, 0xf5, 0x6c, 0xcb, 0x37, 0xa4,
	0x77, 0x42, 0xcc, 0x31, 0xd5, 0x73, 0xbe, 0xd7, 0x33, 0xd0, 0x1e, 0x94, 0x07, 0x84, 0x77, 0x5c,
	0x36, 0x32, 0xa8, 0x9e, 0xf7, 0x4e, 0x4a, 0x03, 0xc2, 0x2f, 0xa5, 0x1d, 0x1c, 0x9a, 0x23, 0x6b,
	0x24, 0xf4, 0xc2, 0xec, 0xf0, 0x93, 0xb4, 0x71, 0x03, 0x36, 0x03, 0xe4, 0x23, 0xc7, 0x6e, 0xd1,
	0xaf, 0xe8, 0x39, 0xe4, 0x1c, 0x57, 0xf8, 0x98, 0x2b, 0xc7, 0x7b, 0x47, 0x8b, 0x44, 0x84, 0xdb,
	0x6c, 0x79, 0x81, 0xf8, 0x29, 0x6c, 0x2d, 0xa4, 0xe0, 0x2e, 0xda, 0x85, 0xa2, 0xb8, 0xed, 0x0c,
	0x09, 0x1f, 0xaa, 0xd6, 0x0b, 0xe2, 0xf6, 0x82, 0xf0, 0x21, 0x7e, 0x09, 0x5a, 0xc3, 0x34, 0x9d,
	0x1b, 0x62, 0x1b, 0x54, 0x16, 0xdb, 0x86, 0x2c, 0x61, 0x03, 0x15, 0x24, 0x3f, 0x11, 0x82, 0x1c,
	0x61, 0x83, 0x63, 0x45, 0x88, 0xf7, 0x8d, 0x0f, 0x61, 0x23, 0x74, 0x8b, 0xbb, 0xe1, 0x6b, 0x9a,
	0x77, 0x0d, 0x7f, 0x4f, 0xc3, 0x9d, 0x86, 0xeb, 0x32, 0x67, 0x42, 0x1b, 0x76, 0xef, 0x3d, 0x31,
	0x4d, 0x99, 0x5e, 0x87, 0x22, 0x77, 0xa9, 0xdd, 0xa3, 0x4c, 0x95, 0x08, 0xcc, 0x39, 0x8f, 0x19,
	0x2f, 0x87, 0xe2, 0xf1, 0x01, 0x00, 0xbd, 0x15, 0x8c, 0x74, 0x7a, 0x44, 0x10, 0x3d, 0x5b, 0xcb,
	0xd6, 0xb5, 0x56, 0xd9, 0xf3, 0x9c, 0x12, 0x41, 0x66, 0xd4, 0xe4, 0x92, 0x52, 0x73, 0x04, 0x28,
	0x0a, 0x8a, 0xbb, 0x1e, 0xaa, 0xb1, 0x61, 0x04, 0x83, 0x51, 0x6a, 0x05, 0x26, 0xb6, 0x00, 0x54,
	0xfc, 0xdf, 0xa0, 0x0f, 0xe0, 0x65, 0x93, 0xc2, 0x7b, 0x02, 0x95, 0x59, 0xb9, 0xb5, 0xb8, 0x6a,
	0xa0, 0x9d, 0x10, 0x53, 0xd2, 0xdf, 0xec, 0xaf, 0x7c, 0x36, 0xf9, 0x44, 0xa1, 0x88, 0x95, 0x4f,
	0x34, 0x84, 0xca, 0xc9, 0x98, 0xd9, 0xe7, 0xcc, 0xb1, 0x64, 0x0e, 0x04, 0x39, 0xb9, 0x0f, 0x2a,
	0x89, 0xf7, 0xfd, 0xbf, 0xfa, 0xaa, 0x83, 0x36, 0xaf, 0xb4, 0xb6, 0xb1, 0x4b, 0x28, 0xca, 0x48,
	0x89, 0x67, 0x56, 0x3b, 0xbd, 0xaa, 0x76, 0x26, 0x69, 0xed, 0xc7, 0x50, 0xf2, 0x33, 0xfe, 0x8e,
	0xd0, 0x53, 0x6a, 0x8c, 0x2c, 0x62, 0xf2, 0x18, 0xb6, 0xf6, 0xa1, 0xf4, 0x99, 0x58, 0x4b, 0xe3,
	0xae, 0xe8, 0xfe, 0x02, 0x1b, 0x4d, 0xdb, 0x7f, 0x3b, 0x62, 0x2a, 0xf4, 0xce, 0x8d, 0x3d, 0x9b,
	0x14, 0xdf, 0x08, 0x4f, 0x50, 0x26, 0x66, 0x82, 0xb2, 0xa1, 0x6e, 0xf1, 0x2b, 0x28, 0x37, 0xed,
	0x80, 0x90, 0xc4, 0x0f, 0x84, 0x3f, 0x48, 0x34, 0x1e, 0x17, 0x7d, 0xca, 0xe2, 0xae, 0x6e, 0x42,
	0x46, 0x38, 0x0a, 0x46, 0x46, 0x38, 0x31, 0x08, 0x0e, 0x00, 0xae, 0xa6, 0x56, 0xd7, 0x31, 0x63,
	0x1a, 0x7f, 0x04, 0x5b, 0x6d, 0x47, 0x10, 0xf3, 0x6a, 0xec, 0xba, 0xe6, 0x34, 0x86, 0xbb, 0x6f,
	0x4a, 0x91, 0xfa, 0x94, 0xad, 0x9b, 0xb6, 0x44, 0x88, 0xfe, 0x7c, 0xe9, 0x9f, 0xc1, 0xf6, 0x62,
	0xf5, 0xb5, 0x93, 0xd0, 0x83, 0x4a, 0x98, 0x39, 0x1f, 0x53, 0x7a, 0x19, 0xd3, 0x3f, 0x6f, 0xc4,
	0xbc, 0xca, 0x3a, 0x3c, 0xc7, 0x3f, 0x0b, 0x90, 0x6f, 0xcb, 0x74, 0xe8, 0x02, 0xca, 0x24, 0x50,
	0x5d, 0x14, 0xad, 0x11, 0x56, 0xf1, 0xea, 0x7e, 0xfc, 0x21, 0x77, 0x71, 0x0a, 0x9d, 0x43, 0x91,
	0xf8, 0x3a, 0x83, 0xee, 0x47, 0x43, 0x67, 0x72, 0x57, 0x3d, 0x88, 0x69, 0x43, 0xfd, 0xa8, 0xe0,
	0x14, 0x6a, 0xc3, 0x26, 0x59, 0x90, 0x53, 0x54, 0x5b, 0x9d, 0x6e, 0xfe, 0x13, 0x90, 0x20, 0xeb,
	0x05, 0x94, 0xbb, 0x81, 0x74, 0x2d, 0xf5, 0x19, 0x96, 0xbd, 0xa5, 0x3e, 0x17, 0x14, 0x0f, 0xa7,
	0xd0, 0x3b, 0xc8, 0x75, 0xc7, 0xcc, 0x46, 0xf7, 0xa2, 0x71, 0xfe, 0x46, 0x25, 0xc2, 0x52, 0xea,
	0x2a, 0xe5, 0x42, 0xd5, 0x15, 0x59, 0xd4, 0x38, 0x27, 0xc8, 0xf4, 0x16, 0x4a, 0x3d, 0xa5, 0x30,
	0x68, 0x27, 0x12, 0xed, 0xfd, 0x6b, 0xa9, 0x46, 0x5b, 0x0d, 0x0b, 0x12, 0x4e, 0xa1, 0xd7, 0x90,
	0xb3, 0x89, 0x45, 0x63, 0x2e, 0xef, 0x46, 0xbc, 0x81, 0x56, 0xe1, 0x14, 0x7a, 0x03, 0x05, 0xee,
	0xad, 0x70, 0xcc, 0xd5, 0xe8, 0x08, 0xcc, 0xf7, 0x1d, 0xa7, 0xd0, 0x19, 0x54, 0xc4, 0x7c, 0xbf,
	0x63, 0x32, 0x2c, 0x75, 0xbf, 0xa8, 0x08, 0x3e, 0x8f, 0x42, 0xcd, 0xfb, 0x12, 0x8f, 0xa1, 0x75,
	0x4b, 0xc0, 0xe3, 0x25, 0x68, 0x22, 0xb4, 0xcd, 0xe8, 0x20, 0x26, 0x5b, 0xe2, 0x97, 0xe9, 0x16,
	0xbc, 0x3f, 0x93, 0x2f, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x63, 0xb1, 0x4f, 0x6b, 0x63, 0x0a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TokenClient is the client API for Token service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokenClient interface {
	Allowance(ctx context.Context, in *AllowanceReq, opts ...grpc.CallOption) (*AllowanceResp, error)
	Approve(ctx context.Context, in *ApproveReq, opts ...grpc.CallOption) (*TransactionResp, error)
	ApproveAndCall(ctx context.Context, in *ApproveAndCallReq, opts ...grpc.CallOption) (*TransactionResp, error)
	BalanceOf(ctx context.Context, in *BalanceOfReq, opts ...grpc.CallOption) (*BalanceOfResp, error)
	Burn(ctx context.Context, in *BurnReq, opts ...grpc.CallOption) (*TransactionResp, error)
	BurnFrom(ctx context.Context, in *BurnFromReq, opts ...grpc.CallOption) (*TransactionResp, error)
	Decimals(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DecimalsResp, error)
	Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResp, error)
	Symbol(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SymbolResp, error)
	TotalSupply(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TotalSupplyResp, error)
	Transfer(ctx context.Context, in *TransferReq, opts ...grpc.CallOption) (*TransactionResp, error)
	TransferFrom(ctx context.Context, in *TransferFromReq, opts ...grpc.CallOption) (*TransactionResp, error)
}

type tokenClient struct {
	cc *grpc.ClientConn
}

func NewTokenClient(cc *grpc.ClientConn) TokenClient {
	return &tokenClient{cc}
}

func (c *tokenClient) Allowance(ctx context.Context, in *AllowanceReq, opts ...grpc.CallOption) (*AllowanceResp, error) {
	out := new(AllowanceResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/allowance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) Approve(ctx context.Context, in *ApproveReq, opts ...grpc.CallOption) (*TransactionResp, error) {
	out := new(TransactionResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/approve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) ApproveAndCall(ctx context.Context, in *ApproveAndCallReq, opts ...grpc.CallOption) (*TransactionResp, error) {
	out := new(TransactionResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/approveAndCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) BalanceOf(ctx context.Context, in *BalanceOfReq, opts ...grpc.CallOption) (*BalanceOfResp, error) {
	out := new(BalanceOfResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/balanceOf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) Burn(ctx context.Context, in *BurnReq, opts ...grpc.CallOption) (*TransactionResp, error) {
	out := new(TransactionResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/burn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) BurnFrom(ctx context.Context, in *BurnFromReq, opts ...grpc.CallOption) (*TransactionResp, error) {
	out := new(TransactionResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/burnFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) Decimals(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DecimalsResp, error) {
	out := new(DecimalsResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/decimals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResp, error) {
	out := new(NameResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) Symbol(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SymbolResp, error) {
	out := new(SymbolResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/symbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) TotalSupply(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TotalSupplyResp, error) {
	out := new(TotalSupplyResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/totalSupply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) Transfer(ctx context.Context, in *TransferReq, opts ...grpc.CallOption) (*TransactionResp, error) {
	out := new(TransactionResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenClient) TransferFrom(ctx context.Context, in *TransferFromReq, opts ...grpc.CallOption) (*TransactionResp, error) {
	out := new(TransactionResp)
	err := c.cc.Invoke(ctx, "/token_service.Token/transferFrom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokenServer is the server API for Token service.
type TokenServer interface {
	Allowance(context.Context, *AllowanceReq) (*AllowanceResp, error)
	Approve(context.Context, *ApproveReq) (*TransactionResp, error)
	ApproveAndCall(context.Context, *ApproveAndCallReq) (*TransactionResp, error)
	BalanceOf(context.Context, *BalanceOfReq) (*BalanceOfResp, error)
	Burn(context.Context, *BurnReq) (*TransactionResp, error)
	BurnFrom(context.Context, *BurnFromReq) (*TransactionResp, error)
	Decimals(context.Context, *Empty) (*DecimalsResp, error)
	Name(context.Context, *Empty) (*NameResp, error)
	Symbol(context.Context, *Empty) (*SymbolResp, error)
	TotalSupply(context.Context, *Empty) (*TotalSupplyResp, error)
	Transfer(context.Context, *TransferReq) (*TransactionResp, error)
	TransferFrom(context.Context, *TransferFromReq) (*TransactionResp, error)
}

func RegisterTokenServer(s *grpc.Server, srv TokenServer) {
	s.RegisterService(&_Token_serviceDesc, srv)
}

func _Token_Allowance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllowanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Allowance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Allowance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Allowance(ctx, req.(*AllowanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_Approve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Approve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Approve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Approve(ctx, req.(*ApproveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_ApproveAndCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveAndCallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).ApproveAndCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/ApproveAndCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).ApproveAndCall(ctx, req.(*ApproveAndCallReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_BalanceOf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceOfReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).BalanceOf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/BalanceOf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).BalanceOf(ctx, req.(*BalanceOfReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_Burn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BurnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Burn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Burn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Burn(ctx, req.(*BurnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_BurnFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BurnFromReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).BurnFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/BurnFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).BurnFrom(ctx, req.(*BurnFromReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_Decimals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Decimals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Decimals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Decimals(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Name(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_Symbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Symbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Symbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Symbol(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_TotalSupply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).TotalSupply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/TotalSupply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).TotalSupply(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).Transfer(ctx, req.(*TransferReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Token_TransferFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferFromReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServer).TransferFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/token_service.Token/TransferFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServer).TransferFrom(ctx, req.(*TransferFromReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Token_serviceDesc = grpc.ServiceDesc{
	ServiceName: "token_service.Token",
	HandlerType: (*TokenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "allowance",
			Handler:    _Token_Allowance_Handler,
		},
		{
			MethodName: "approve",
			Handler:    _Token_Approve_Handler,
		},
		{
			MethodName: "approveAndCall",
			Handler:    _Token_ApproveAndCall_Handler,
		},
		{
			MethodName: "balanceOf",
			Handler:    _Token_BalanceOf_Handler,
		},
		{
			MethodName: "burn",
			Handler:    _Token_Burn_Handler,
		},
		{
			MethodName: "burnFrom",
			Handler:    _Token_BurnFrom_Handler,
		},
		{
			MethodName: "decimals",
			Handler:    _Token_Decimals_Handler,
		},
		{
			MethodName: "name",
			Handler:    _Token_Name_Handler,
		},
		{
			MethodName: "symbol",
			Handler:    _Token_Symbol_Handler,
		},
		{
			MethodName: "totalSupply",
			Handler:    _Token_TotalSupply_Handler,
		},
		{
			MethodName: "transfer",
			Handler:    _Token_Transfer_Handler,
		},
		{
			MethodName: "transferFrom",
			Handler:    _Token_TransferFrom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "token_service.proto",
}
